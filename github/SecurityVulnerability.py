import github.Commit
import github.GithubObject
import github.Package


class SecurityVulnerability(github.GithubObject.NonCompletableGithubObject):
    """
    This class represents SecurityVulnerability. The reference can be found here in the alert here https://docs.github.com/en/rest/dependabot/alerts#list-dependabot-alerts-for-a-repository
    """

    def __repr__(self):
        return self.get__repr__(
            {
                "package": self._package.value,
                "severity": self._severity.value,
                "vulnerable_version_range": self._vulnerable_version_range.value,
            }
        )

    @property
    def package(self):
        """
        :type: :class:`github.Package.Package`
        """
        return self._package.value

    @property
    def severity(self):
        """
        :type: string
        """
        return self._severity.value

    @property
    def vulnerable_version_range(self):
        """
        :type: string
        """
        return self._vulnerable_version_range.value

    def _initAttributes(self):
        self._package = github.GithubObject.NotSet
        self._severity = github.GithubObject.NotSet
        self._vulnerable_version_range = github.GithubObject.NotSet

    def _useAttributes(self, attributes):
        if "package" in attributes:  # pragma no branch
            self._package = self._makeClassAttribute(
                github.Package.Package, attributes["package"]
            )
        if "severity" in attributes:  # pragma no branch
            self._severity = self._makeStringAttribute(attributes["severity"])
        if "vulnerable_version_range" in attributes:  # pragma no branch
            self._vulnerable_version_range = self._makeStringAttribute(
                attributes["vulnerable_version_range"]
            )
